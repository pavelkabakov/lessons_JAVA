package book_shild_beginners.charter07;
// Пример, усовершенствованной версии класса Stack
// В этом классе определяется целочисленный стек, который может содержать 10 значений
class Stack08 {
    /* Теперь переменные stck и tos являются закрытыми.
       Это означает, что они не могут быть случайно или
       намеренно изменены таким образом, чтобы нарушить стек. */
    private int[] stck = new int[10];
    private int tos;

    // инициализировать вершину стека
    Stack08() {
        tos = -1;
    }

    // поместить элемент в стек
    void push(int item) {
        if (tos == 9)
            System.out.println("Стек загружен. (нет места для элемента): " + item);
        else
            stck[++tos] = item;
    }

    // извлечь элемент из стека
    int pop() {
        if (tos < 0) {
            System.out.print(" (Стек пуст.)");
            return 0;
        }
        else
            return stck[tos--];
    }
}
// Тестируем класс Stack
public class StackTest08 {
    public static void main (String[] args) {
        Stack08 mystack08 = new Stack08();
        Stack08 mystack09 = new Stack08();

        // разместить числа в стеке
        for (int i = 0; i < 10; i++) mystack08.push(i);
        for (int i = 0; i < 20; i++) mystack09.push(i);
        System.out.println("-------------------------");
        // извлечь эти числа из стека
        for (int i = 0; i < 10; i++)
            System.out.println("Извлечь элемент из стека (mystack08): " + mystack08.pop());

        System.out.print("-------------------------");

        for (int i = 0; i < 20; i++)
            System.out.print("\nИзвлечь элемент из стека (mystack09): " + mystack09.pop());

        // эти операторы недопустимы
        // mystack08.tos = -2;
        // mystack09.stck[3] = 100;
    }
}

/*
--------------------------
Стек загружен. (нет места для элемента): 10
Стек загружен. (нет места для элемента): 11
Стек загружен. (нет места для элемента): 12
Стек загружен. (нет места для элемента): 13
Стек загружен. (нет места для элемента): 14
Стек загружен. (нет места для элемента): 15
Стек загружен. (нет места для элемента): 16
Стек загружен. (нет места для элемента): 17
Стек загружен. (нет места для элемента): 18
Стек загружен. (нет места для элемента): 19
-------------------------
Извлечь элемент из стека (mystack08): 9
Извлечь элемент из стека (mystack08): 8
Извлечь элемент из стека (mystack08): 7
Извлечь элемент из стека (mystack08): 6
Извлечь элемент из стека (mystack08): 5
Извлечь элемент из стека (mystack08): 4
Извлечь элемент из стека (mystack08): 3
Извлечь элемент из стека (mystack08): 2
Извлечь элемент из стека (mystack08): 1
Извлечь элемент из стека (mystack08): 0
-------------------------
Извлечь элемент из стека (mystack09): 9
Извлечь элемент из стека (mystack09): 8
Извлечь элемент из стека (mystack09): 7
Извлечь элемент из стека (mystack09): 6
Извлечь элемент из стека (mystack09): 5
Извлечь элемент из стека (mystack09): 4
Извлечь элемент из стека (mystack09): 3
Извлечь элемент из стека (mystack09): 2
Извлечь элемент из стека (mystack09): 1
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0 (Стек пуст.)
Извлечь элемент из стека (mystack09): 0
 */